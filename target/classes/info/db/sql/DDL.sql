-- CREATING THE DB
GO
CREATE DATABASE spomp
GO

-- USING THE DB
GO
USE spomp
GO

-- CREATING THE TABLES
GO
CREATE TABLE DEPT_GT(
	NAME_ VARCHAR(50) NOT NULL,
	PRIMARY KEY(NAME_)
)
GO
GO
CREATE TABLE CITY_GT(
	NAME_ VARCHAR(50) NOT NULL,
	FK_DEPT_GT VARCHAR(50) NOT NULL,
	PRIMARY KEY(NAME_),
	FOREIGN KEY(FK_DEPT_GT) REFERENCES DEPT_GT(NAME_)
)
GO
GO
CREATE TABLE BRANCH(
	ID INT NOT NULL IDENTITY(1,1),
	DIRECTION VARCHAR(200) NOT NULL,
	FK_CITY_GT VARCHAR(50) NOT NULL,
	FK_DEPT_GT VARCHAR(50) NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(FK_CITY_GT) REFERENCES CITY_GT(NAME_),
	FOREIGN KEY(FK_DEPT_GT) REFERENCES DEPT_GT(NAME_)
	
)
GO
GO
CREATE TABLE PHONE(
	PHONE VARCHAR(15) NOT NULL,
	FK_BRANCH INT NOT NULL,
	PRIMARY KEY(PHONE),
	FOREIGN KEY(FK_BRANCH) REFERENCES BRANCH(ID)
)
GO
GO
CREATE TABLE DEPARTMENT(
	NAME_ VARCHAR(75) NOT NULL,
	DESCRIPTION_ VARCHAR(200) NOT NULL,
	PRIMARY KEY(NAME_)
)
GO
GO
CREATE TABLE BRANCH_DEPTS(
	FK_BRANCH INT NOT NULL,
	FK_DEPT VARCHAR(75) NOT NULL,
	N_PEOPLE INT NOT NULL DEFAULT 0,
	CONSTRAINT PK_BRANCH_DEPTS PRIMARY KEY(FK_BRANCH,FK_DEPT),
	FOREIGN KEY(FK_BRANCH) REFERENCES BRANCH(ID),
	FOREIGN KEY(FK_DEPT) REFERENCES DEPARTMENT(NAME_),
	CONSTRAINT CH_N_PEOPLE CHECK(N_PEOPLE>=0)
)
GO
GO
CREATE TABLE BUSINESS(
	NAME_ VARCHAR(75) NOT NULL,
	PRIMARY KEY(NAME_)
)
GO
GO
CREATE TABLE PROVIDER_(
	ID INT NOT NULL IDENTITY(1,1),
	NAME_ VARCHAR(75) NOT NULL,
	DIRECTION VARCHAR(200) NOT NULL,
	PHONE VARCHAR(15) NOT NULL,
	PRIMARY KEY(ID)
)
GO
GO
CREATE TABLE PROVIDER_BUSINESS(
	FK_PROVIDER INT NOT NULL,
	FK_BUSINESS VARCHAR(75) NOT NULL,
	CONSTRAINT PK_PROVIDER_BUSINESS PRIMARY KEY(FK_PROVIDER,FK_BUSINESS),
	FOREIGN KEY(FK_PROVIDER) REFERENCES PROVIDER_(ID),
	FOREIGN KEY(FK_BUSINESS) REFERENCES BUSINESS(NAME_)
)
GO
GO
CREATE TABLE PROVIDER_PARTNERS(
	FK_PROVIDER INT NOT NULL,
	FK_PARTNER INT NOT NULL,
	FOREIGN KEY(FK_PROVIDER) REFERENCES PROVIDER_(ID),
	FOREIGN KEY(FK_PROVIDER) REFERENCES PROVIDER_(ID),
	CONSTRAINT PK_PROVIDER_PARTNERS PRIMARY KEY(FK_PROVIDER,FK_PARTNER),
	CONSTRAINT CHK_P_P CHECK (FK_PROVIDER <> FK_PARTNER) -- BECAUSE A PROVIDER CAN'T BE ITS OWN PARTNER
)
GO
GO
CREATE TABLE ARTICLE(
	ID INT NOT NULL IDENTITY(1,1),
	NAME_ VARCHAR(75) NOT NULL,
	DESCRIPTION_ VARCHAR(200) NOT NULL,
	PRIMARY KEY(ID)
)
GO
GO
CREATE TABLE PROVIDER_ARTICLE(
	FK_ARTICLE INT NOT NULL,
	FK_PROVIDER INT NOT NULL,
	PRICE FLOAT NOT NULL,
	FOREIGN KEY(FK_ARTICLE) REFERENCES ARTICLE(ID),
	FOREIGN KEY(FK_PROVIDER) REFERENCES PROVIDER_(ID),
	CONSTRAINT PK_PROVIDER_ARTICLE PRIMARY KEY(FK_ARTICLE,FK_PROVIDER),
	CONSTRAINT CHK_PRICE CHECK (PRICE >0)
)
GO
GO
CREATE TABLE REQUEST(
	ID INT NOT NULL IDENTITY(1,1),
	FK_ARTICLE INT NOT NULL,   
	UNITS INT NOT NULL,
	DATE_DONE DATE NOT NULL DEFAULT GETDATE(),
	DATE_EXP DATE NOT NULL,
	FK_DEPT VARCHAR(75) NOT NULL,
	FK_BRANCH INT NOT NULL,
	ATTENDED BIT NOT NULL DEFAULT 0,
	PRIMARY KEY(ID),
	FOREIGN KEY(FK_ARTICLE) REFERENCES ARTICLE(ID), 
	FOREIGN KEY(FK_DEPT) REFERENCES DEPARTMENT(NAME_), --*
	FOREIGN KEY(FK_BRANCH) REFERENCES BRANCH(ID), --*
	CONSTRAINT CHK_REQUEST CHECK(DATE_EXP >= DATE_DONE AND UNITS >0)
)
GO
GO
CREATE TABLE PURCHASE_ORDER(
	ID INT NOT NULL IDENTITY(1,1),
	DESCRIPTION_ VARCHAR(200) NOT NULL,
	DATE_DONE DATE NOT NULL DEFAULT GETDATE(),
	DATE_EXP DATE NOT NULL,
	ATTENDED BIT NOT NULL DEFAULT 0,
	PRIMARY KEY(ID),
	CONSTRAINT CHK_DATE CHECK(DATE_EXP >= DATE_DONE)
)
GO
GO
CREATE TABLE BIG_PURCHASE_ORDER(
	FK_PUR_ORDER INT NOT NULL,
	PRIMARY KEY(FK_PUR_ORDER),
	FOREIGN KEY(FK_PUR_ORDER) REFERENCES PURCHASE_ORDER(ID)
)
GO
GO
CREATE TABLE SMALL_PURCHASE_ORDER(
	FK_PUR_ORDER INT NOT NULL,
	SUBTYPE BIT DEFAULT 0, -- 0 = NORMAL, 1=URGENT
	PRIMARY KEY(FK_PUR_ORDER),
	FOREIGN KEY(FK_PUR_ORDER) REFERENCES PURCHASE_ORDER(ID)
)
GO
GO
CREATE TABLE REQUESTS_OF_PURCHASE_ORDER(
	FK_PUR_ORDER INT NOT NULL,
	FK_REQUEST INT NOT NULL UNIQUE, -- 'UNIQUE' BECAUSE ONE REQUEST CANNOT BE PART OF TWO PURCHASE ORDERS
	CONSTRAINT PK_ROPO PRIMARY KEY(FK_PUR_ORDER,FK_REQUEST),
	FOREIGN KEY(FK_PUR_ORDER) REFERENCES PURCHASE_ORDER(ID),
	FOREIGN KEY(FK_REQUEST) REFERENCES REQUEST(ID)
)
GO
GO
CREATE TABLE OFFER(
	FK_PUR_ORDER INT NOT NULL,
	FK_REQUEST INT NOT NULL,
	FK_PROVIDER INT NOT NULL,
	DATE_DONE DATE NOT NULL DEFAULT GETDATE(),
	TAKEN BIT NOT NULL DEFAULT 0, -- TO KNOW IF AN OFFER HAS BEEN TAKEN
	CONSTRAINT PK_OFFERS PRIMARY KEY(FK_PUR_ORDER,FK_REQUEST,FK_PROVIDER),
	FOREIGN KEY(FK_PUR_ORDER) REFERENCES PURCHASE_ORDER(ID),
	FOREIGN KEY(FK_REQUEST) REFERENCES REQUEST(ID),
	FOREIGN KEY(FK_PROVIDER) REFERENCES PROVIDER_(ID)
)
GO
GO
CREATE TABLE PURCHASE_RESOLUTION(
	ID INT NOT NULL IDENTITY(1,1),
	DATE_DONE DATE NOT NULL DEFAULT GETDATE(),
	FK_PUR_ORDER INT NOT NULL,
	FK_REQUEST INT NOT NULL,
	FK_PROVIDER INT NOT NULL,
	PRIMARY KEY(ID),
	FOREIGN KEY(FK_PUR_ORDER) REFERENCES PURCHASE_ORDER(ID),
	FOREIGN KEY(FK_REQUEST) REFERENCES   REQUEST(ID),
	FOREIGN KEY(FK_PROVIDER) REFERENCES  PROVIDER_(ID)
)
GO

-- CREATING THE USERS (TEMP)
CREATE TABLE USER_(
	EMAIL VARCHAR(50) NOT NULL,
	PASS VARCHAR(200) NOT NULL,
	FIRST_NAMES VARCHAR(200) NOT NULL,
	LAST_NAMES VARCHAR(200) NOT NULL,
	DAGISTRATION_DATE DATE DEFAULT GETDATE(),
	PRIMARY KEY(EMAIL)
)



























